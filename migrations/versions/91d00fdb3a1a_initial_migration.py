"""Initial Migration

Revision ID: 91d00fdb3a1a
Revises:
Create Date: 2025-05-31 14:14:17.122183

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "91d00fdb3a1a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "service",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("uri", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uri"),
        if_not_exists=True,
    )
    op.create_table(
        "user",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
        if_not_exists=True,
    )
    op.create_table(
        "ping",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("service_id", sa.BigInteger(), nullable=False),
        sa.Column("http_response", sa.Integer(), nullable=False),
        sa.Column("pinged_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"], ["service.id"], onupdate="CASCADE", ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
        if_not_exists=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ping", if_exists=True)
    op.drop_table("user", if_exists=True)
    op.drop_table("service", if_exists=True)
    # For SQLite, use DELETE FROM instead of TRUNCATE TABLE
    # Detect if the current database is SQLite and use the appropriate syntax
    bind = op.get_bind()
    if bind.dialect.name == "sqlite":
        op.execute("DELETE FROM apscheduler_jobs")
    else:
        op.execute("TRUNCATE TABLE apscheduler_jobs")
    # ### end Alembic commands ###
