# https://taskfile.dev

version: "3"

env:
  FLASK_APP: downtime_panda

tasks:
# -------------------------------- FIRST SETUP ------------------------------- #
  setup:
    cmds:
      - echo "Setting up the environment..."
      - uv sync --dev
      - uv run pre-commit install

# ----------------------------------- BUILD ---------------------------------- #
  docker-build: docker build -t downtime-panda .

# -------------------------------- DEVELOPMENT ------------------------------- #
  dev-up:
    cmds:
      - task: run-flask

  docker-up: docker compose -f docker-compose.dev.yml up -d --build

  docker-down:
    aliases: [dev-down]
    cmds:
      - docker compose -f docker-compose.dev.yml down --remove-orphans

  run-flask-command:*:
    vars:
      command: "{{ index .MATCH 0 }}"
    cmds:
      - uv run flask {{.command}}

  run-flask:
    vars:
      PORT: 8080
      HOST: 127.0.0.1
    env:
      DTPANDA_DEBUG: true
      DTPANDA_SECRET_KEY: test
    cmds:
      - uv run flask run --port {{.PORT}} --host {{.HOST}} --debug

# ---------------------------------- TESTING --------------------------------- #
  test:
    cmds:
      - uv run pytest


# ---------------------------------- STAGING --------------------------------- #
  staging-copy-cert: docker compose -f ./docker-compose.staging.yml cp caddy:/data/caddy/pki/authorities/local/root.crt temp/root.crt

  staging-docker-up: docker compose -f ./docker-compose.staging.yml up -d --build

  staging-docker-down: docker compose -f ./docker-compose.staging.yml down

# -------------------------------- MIGRATIONS -------------------------------- #
  dev-migrate-up: uv run flask db upgrade head

  dev-migrate-down: uv run flask db downgrade base

  dev-migrate-clean:
    cmds:
      - task: dev-migrate-down
      - task: dev-migrate-up

  make-migration:*:
    vars:
      DESCRIPTION: "{{index .MATCH 0}}"
    cmds:
      - uv run flask db migrate -m {{.DESCRIPTION}}
