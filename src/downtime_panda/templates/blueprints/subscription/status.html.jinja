{% extends "base.html.jinja" %}
{% block head %}
    {{ super() }}
    <script src="https://cdn.plot.ly/plotly-3.0.1.min.js" charset="utf-8"></script>
{% endblock head %}
{% block title %}
    Service {{ subscription.name }}
{% endblock title %}
{% block body %}
    {% if pings.status %}
        <p>Latest Status: {{ pings.status[-1] }} ({{ pings.status[-1] | httpstatus }})</p>
        <div id="myDiv"></div>
        <script>
        const uuid = "{{ subscription.uuid }}";
        const data = {{ pings|tojson }};

        let lastTimestamp = data.x.length > 0 ? data.x[data.x.length - 1] : null;

        const graph_data = {
            'x': data.x.map((date) => new Date(date)),
            'y': data.y,
            'text': 'test',
            'type': 'scatter',
        };

        const layout = {
            xaxis: {
                title: {
                    text: "Orario"
                }
            },
            yaxis: {
                title: {
                    text: "Tempo di risposta (s)"
                }
            },
        };

        const config = {responsive: true}

        Plotly.newPlot(
            'myDiv',
            [graph_data],
            layout,
            config,
        );

        function fetchNewPings() {
            if (!lastTimestamp) return;
            fetch(`{{url_for("subscription.get_subscription_pings_since", uuid=subscription.uuid)}}?since=${encodeURIComponent(new Date(lastTimestamp).toISOString())}`)
                .then(response => response.json())
                .then(newData => {
                    if (newData.x && newData.x.length > 0) {
                        // Append new data to the plot
                        Plotly.extendTraces('myDiv', {
                            x: [newData.x.map(date => new Date(date))],
                            y: [newData.y]
                        }, [0]);
                        // Update lastTimestamp
                        lastTimestamp = newData.x[newData.x.length - 1];
                    }
                })
                .catch(console.error);
        }

        setInterval(fetchNewPings, 5000);
        </script>
    {% else %}
        <p>No pings as of yet</p>
    {% endif %}
{% endblock body %}
